name: Deploy to GitHub Pages (pnpm)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Permissions pour déployer sur GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Concurrency pour éviter les déploiements simultanés
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build et test
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: List files for debugging
      run: ls -la
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Verify TypeScript ESLint installation
      run: pnpm list @typescript-eslint/eslint-plugin @typescript-eslint/parser
      
    - name: Run linter
      run: pnpm lint
      
    - name: Build project
      run: pnpm build
      
    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  # Job de déploiement (seulement sur push vers main/master)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 